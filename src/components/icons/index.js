import React from 'react';
import PropTypes from 'prop-types';
import {
  SvgContainer,
  SvgInline,
} from './style';

const Glyph = ({ glyph }) => {
  switch (glyph) {
    case 'search':
      return (
        <g>
          <path d="M14,9c-2.761,0 -5,2.239 -5,5c0,2.761 2.239,5 5,5c1.387,0 2.641,-0.564 3.548,-1.477c0.899,-0.905 1.452,-2.148 1.452,-3.523c0,-2.761 -2.239,-5 -5,-5Zm-7,5c0,-3.866 3.134,-7 7,-7c3.866,0 7,3.134 7,7c0,1.257 -0.332,2.436 -0.912,3.456c-0.244,0.431 -0.212,0.981 0.137,1.332l3.984,4.007c0.389,0.391 0.388,1.025 -0.004,1.414c-0.392,0.389 -1.025,0.388 -1.414,-0.004l-3.97,-3.992c-0.352,-0.354 -0.908,-0.387 -1.341,-0.138c-1.025,0.588 -2.214,0.925 -3.48,0.925c-3.866,0 -7,-3.134 -7,-7Z" />
        </g>
      );
    case 'controls':
      return (
        <path
          d="M 3 15.7325C 3.5978 15.3867 4 14.7403 4 14C 4 13.2597 3.5978 12.6133 3 12.2675C 2.98457 12.2586 2.96901 12.2499 2.95332 12.2414C 2.66993 12.0875 2.34518 12 2 12C 1.63581 12 1.29436 12.0974 1.00024 12.2674L 1 12.2675C 0.402199 12.6133 0 13.2597 0 14C 0 14.7403 0.402199 15.3867 1 15.7325C 1.01543 15.7414 1.03099 15.7501 1.04668 15.7586C 1.33007 15.9125 1.65482 16 2 16C 2.36419 16 2.70564 15.9026 2.99976 15.7326L 3 15.7325ZM 3 1L 3 11.1707C 2.68722 11.0602 2.35064 11 2 11C 1.64936 11 1.31278 11.0602 1 11.1707L 1 1C 1 0.447723 1.44771 0 2 0C 2.55228 0 3 0.447723 3 1ZM 3 16.8293C 2.68722 16.9398 2.35064 17 2 17C 1.64936 17 1.31278 16.9398 1 16.8293L 1 19C 1 19.5523 1.44771 20 2 20C 2.55228 20 3 19.5523 3 19L 3 16.8293ZM 11 7.73245C 11.5978 7.38666 12 6.7403 12 6C 12 5.2597 11.5978 4.61334 11 4.26755C 10.9846 4.25864 10.969 4.24991 10.9533 4.24139C 10.6699 4.08746 10.3452 4 10 4C 9.63581 4 9.29436 4.09735 9.00024 4.26743L 9 4.26755C 8.4022 4.61334 8 5.2597 8 6C 8 6.7403 8.4022 7.38666 9 7.73245C 9.01543 7.74136 9.03099 7.75009 9.04668 7.75861C 9.33007 7.91254 9.65482 8 10 8C 10.3642 8 10.7056 7.90265 10.9998 7.73257L 11 7.73245ZM 11 1L 11 3.17072C 10.6872 3.06015 10.3506 3 10 3C 9.64936 3 9.31278 3.06015 9 3.17072L 9 1C 9 0.447723 9.44772 0 10 0C 10.5523 0 11 0.447723 11 1ZM 11 8.82928C 10.6872 8.93985 10.3506 9 10 9C 9.64936 9 9.31278 8.93985 9 8.82928L 9 19C 9 19.5523 9.44772 20 10 20C 10.5523 20 11 19.5523 11 19L 11 8.82928ZM 20 10C 20 10.7403 19.5978 11.3867 19 11.7325L 18.9998 11.7326C 18.7056 11.9026 18.3642 12 18 12C 17.6548 12 17.3301 11.9125 17.0467 11.7586C 17.031 11.7501 17.0154 11.7414 17 11.7325C 16.4022 11.3867 16 10.7403 16 10C 16 9.2597 16.4022 8.61334 17 8.26755L 17.0002 8.26743C 17.2944 8.09735 17.6358 8 18 8C 18.3452 8 18.6699 8.08746 18.9533 8.24139C 18.969 8.24991 18.9846 8.25861 19 8.26755C 19.5978 8.61334 20 9.2597 20 10ZM 19 7.17072L 19 1C 19 0.447723 18.5523 0 18 0C 17.4477 0 17 0.447723 17 1L 17 7.17072C 17.3128 7.06015 17.6494 7 18 7C 18.3506 7 18.6872 7.06015 19 7.17072ZM 18 13C 18.3506 13 18.6872 12.9398 19 12.8293L 19 19C 19 19.5523 18.5523 20 18 20C 17.4477 20 17 19.5523 17 19L 17 12.8293C 17.3128 12.9398 17.6494 13 18 13Z"
          transform="matrix(0 1 -1 0 26 6)"
        />
      );
    case 'emoji':
      return (
        <g>
          <path d="M26,16c0,5.523 -4.477,10 -10,10c-5.523,0 -10,-4.477 -10,-10c0,-5.523 4.477,-10 10,-10c5.523,0 10,4.477 10,10Zm2,0c0,6.627 -5.373,12 -12,12c-6.627,0 -12,-5.373 -12,-12c0,-6.627 5.373,-12 12,-12c6.627,0 12,5.373 12,12Zm-17.5,0c0.829,0 1.5,-0.672 1.5,-1.5c0,-0.828 -0.671,-1.5 -1.5,-1.5c-0.829,0 -1.5,0.672 -1.5,1.5c0,0.828 0.671,1.5 1.5,1.5Zm12.5,-1.5c0,0.828 -0.671,1.5 -1.5,1.5c-0.829,0 -1.5,-0.672 -1.5,-1.5c0,-0.828 0.671,-1.5 1.5,-1.5c0.829,0 1.5,0.672 1.5,1.5Zm-6.999,8c2.45,0 4.534,-1.715 5,-4c0.232,-1.14 -3,-1.5 -5,-1.5c-2,0 -5.259,0.231 -5,1.5c0.466,2.285 2.549,4 5,4Zm2,-2c0,0 -0.896,0.5 -2,0.5c-1.105,0 -2,-0.5 -2,-0.5c0,0 0.895,-1 2,-1c1.104,0 2,1 2,1Z" />
        </g>
      );
    case 'send':
      return (
        <g>
          <path
            d="M16.044,15.012c-0.005,-0.104 -0.071,-0.205 -0.198,-0.232l-7.45,-1.579c-0.231,-0.049 -0.396,-0.253 -0.396,-0.489l0,-5.712c0,-0.73 0.698,-1.159 1.419,-0.908c4.295,1.497 12.081,5.408 15.616,8.025c0.34,0.252 0.515,0.573 0.52,0.895c-0.005,0.323 -0.18,0.644 -0.52,0.896c-3.535,2.617 -11.321,6.868 -15.616,8.365c-0.721,0.251 -1.419,-0.178 -1.419,-0.908l0,-6.052c0,-0.236 0.165,-0.44 0.396,-0.489l7.45,-1.579c0.127,-0.027 0.193,-0.129 0.198,-0.233Z"
          />
        </g>
      );
    case 'message':
      return (
        <g>
          <path d="M14.5,7.021c0.625,-0.014 1.291,-0.021 2,-0.021c10.542,0 11.5,1.5 11.5,8c0,6.5 -0.958,8 -11.5,8c-0.517,0 -1.01,-0.004 -1.482,-0.011c-0.001,0 -0.002,0 -0.002,0.001l-4.461,2.974c-0.665,0.443 -1.555,-0.034 -1.555,-0.833l0,-2.713c0,-0.002 -0.002,-0.004 -0.004,-0.005c-2.969,-0.754 -3.765,-2.347 -3.948,-5.413c-0.036,-0.607 -0.048,-1.272 -0.048,-2c0,-6.063 0.834,-7.776 9.5,-7.979Zm-7.023,12.153c-0.341,-0.732 -0.477,-1.923 -0.477,-4.174c-0.001,-1.579 0.04,-2.656 0.259,-3.523c0.171,-0.791 0.268,-1.008 0.751,-1.324c0.394,-0.301 1.12,-0.62 2.55,-0.84c1.458,-0.228 3.327,-0.312 5.892,-0.313l0.048,0c2.589,-0.001 4.473,0.084 5.94,0.313c1.43,0.22 2.156,0.539 2.55,0.84c0.483,0.316 0.58,0.533 0.751,1.324c0.219,0.867 0.259,1.944 0.259,3.523c0,1.579 -0.04,2.656 -0.259,3.523c-0.171,0.791 -0.268,1.007 -0.751,1.324c-0.394,0.301 -1.12,0.62 -2.55,0.84c-1.467,0.229 -3.351,0.313 -5.94,0.313c-0.509,0 -0.987,-0.004 -1.449,-0.011c-0.303,0.018 -0.882,0.188 -1.145,0.337l-2.906,1.937l0,-0.845c0,-0.96 -0.664,-1.728 -1.512,-1.943c-1.389,-0.353 -1.784,-0.813 -2.011,-1.301Zm4.023,-2.174c0.828,0 1.5,-0.672 1.5,-1.5c0,-0.828 -0.672,-1.5 -1.5,-1.5c-0.828,0 -1.5,0.672 -1.5,1.5c0,0.828 0.672,1.5 1.5,1.5Zm6.5,-1.5c0,0.828 -0.672,1.5 -1.5,1.5c-0.828,0 -1.5,-0.672 -1.5,-1.5c0,-0.828 0.672,-1.5 1.5,-1.5c0.828,0 1.5,0.672 1.5,1.5Zm3.5,1.5c0.828,0 1.5,-0.672 1.5,-1.5c0,-0.828 -0.672,-1.5 -1.5,-1.5c-0.828,0 -1.5,0.672 -1.5,1.5c0,0.828 0.672,1.5 1.5,1.5Z" />
        </g>
      );
    case 'close':
      return (
        <g>
          <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
          <path d="M0 0h24v24H0z" fill="none" />
        </g>
      );
    case 'clock':
      return (
        <g>
          <path d="M0 0h24v24H0z" fill="none" />
          <path d="M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z" />
        </g>
      );
    case 'branch':
      return (
        <g>
          <path d="M6,2A3,3 0 0,1 9,5C9,6.28 8.19,7.38 7.06,7.81C7.15,8.27 7.39,8.83 8,9.63C9,10.92 11,12.83 12,14.17C13,12.83 15,10.92 16,9.63C16.61,8.83 16.85,8.27 16.94,7.81C15.81,7.38 15,6.28 15,5A3,3 0 0,1 18,2A3,3 0 0,1 21,5C21,6.32 20.14,7.45 18.95,7.85C18.87,8.37 18.64,9 18,9.83C17,11.17 15,13.08 14,14.38C13.39,15.17 13.15,15.73 13.06,16.19C14.19,16.62 15,17.72 15,19A3,3 0 0,1 12,22A3,3 0 0,1 9,19C9,17.72 9.81,16.62 10.94,16.19C10.85,15.73 10.61,15.17 10,14.38C9,13.08 7,11.17 6,9.83C5.36,9 5.13,8.37 5.05,7.85C3.86,7.45 3,6.32 3,5A3,3 0 0,1 6,2M6,4A1,1 0 0,0 5,5A1,1 0 0,0 6,6A1,1 0 0,0 7,5A1,1 0 0,0 6,4M18,4A1,1 0 0,0 17,5A1,1 0 0,0 18,6A1,1 0 0,0 19,5A1,1 0 0,0 18,4M12,18A1,1 0 0,0 11,19A1,1 0 0,0 12,20A1,1 0 0,0 13,19A1,1 0 0,0 12,18Z" />
        </g>
      );
    case 'timelapse':
      return (
        <g>
          <path d="M0 0h24v24H0z" fill="none" />
          <path d="M16.24 7.76C15.07 6.59 13.54 6 12 6v6l-4.24 4.24c2.34 2.34 6.14 2.34 8.49 0 2.34-2.34 2.34-6.14-.01-8.48zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z" />
        </g>
      );
    case 'sync':
      return (
        <g>
          <path d="M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z" />
          <path d="M0 0h24v24H0z" fill="none" />
        </g>
      );
  }
};

const Icon = ({ glyph, size, viewBox }) => {
  const view = `0 0 ${viewBox} ${viewBox}`;

  return (
    <SvgContainer>
      <SvgInline
        version="1.1"
        xmlns="http://www.w3.org/2000/svg"
        fillRule="evenodd"
        clipRule="evenodd"
        viewBox={view}
        size={size}
        id={glyph}
      >
        <Glyph glyph={glyph} />
      </SvgInline>
    </SvgContainer>
  );
};

Icon.propTypes = {
  glyph: PropTypes.string.isRequired,
  size: PropTypes.number.isRequired,
  viewBox: PropTypes.number,
};

Icon.defaultProps = {
  viewBox: 32,
}

export default Icon;